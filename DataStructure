##Proje 1

[22,27,16,2,18,6] -> Insertion Sort

Yukarı verilen dizinin sort türüne göre aşamalarını yazınız.
Big-O gösterimini yazınız.
Time Complexity: Average case: Aradığımız sayının ortada olması,Worst case: Aradığımız sayının sonda olması, Best case: Aradığımız sayının dizinin en başında olması.
Dizi sıralandıktan sonra 18 sayısı hangi case kapsamına girer? Yazınız.


[7,3,5,8,2,9,4,15,6] dizisinin Insertion Sort'a göre ilk 4 adımını yazınız.

1)Verilen dizinin sort türüne göre aşamaları nedir ?


1.Stage = [22,27,16,2,18,6]
2.Stage = [16,22,27,2,18,6]
3.Stage = [2,16,22,27,18,6]
4.Stage = [2,16,18,22,27,6]
5.Stage = [2,6,16,18,22,27]

2)Verilen dizinin Big-O gösterimi nasıl yapılır ?

O(n^2)

3)Time Complexity: 
-Average case: Aradığımız sayının ortada olması,
-Worst case: Aradığımız sayının sonda olması,
-Best case: Aradığımız sayının dizinin en başında olması.

4)Dizi sıralayınız ve 18 sayısının hangi case kapsamına girdiğini bulunuz?
   
 -Average Case

5-)[7,3,5,8,2,9,4,15,6] dizisinin Insertion Sort'a göre ilk 4 adımı nedir ?

Çözüm
1.Step[7,3,5,8,2,9,4,15,6]
2.Step[3,7,5,8,2,9,4,15,6]
3.Step[3,5,7,8,2,9,4,15,6]
4.Step[3,5,7,8,2,9,4,15,6]
------------------------------------------------------------------------------------------
##Proje 2

[16,21,11,8,12,22] -> Merge Sort

Yukarıdaki dizinin sort türüne göre aşamalarını yazınız.
Big-O gösterimini yazınız.

 örnekDizi= [16,21,11,8,12,22]

1) "MergeShort" türüne göre aşamaları =>

                 [16,21,11,8,12,22]
                /                 \
            [16,21,11]            [8,12,22]
             /     \               /       \
          [16]    [21,11]        [8]    [12,22]
            |      /  \           |      /     \
          [16]   [21]  [11]      [8]   [12]    [22]
            |      \    /         |      \     /
          [16]     [11,21]       [8]     [12,22]
            \         /            \       /
            [11,16,21]             [8,12,22]
                      \           / 
                    [8,11,12,16,21,22]    

2)Dizinin "Big-O"  gösterimi =>

n = 2^x
x = logn => O(nlogn)
---------------------------------------------------------------------------------------
##Proje 3

[7, 5, 1, 8, 3, 6, 0, 9, 4, 2] dizisinin Binary-Search-Tree aşamalarını yazınız.

Örnek: root x'dir. root'un sağından y bulunur. Solunda z bulunur vb.

1)Dizininin "Binary-Search-Tree" aşamalarını gösteriniz =>

a)[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
     
b)Root: 5

Root'un sağında: 7
Root'un solounda: 3

c)
 
               5 
             /   \
           /       \
          3         7
        /   \     /   \
      1     4    6     8
     / \               | 
    0   2              9

